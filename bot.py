import telebot
from telebot import types

import matplotlib.pyplot as plt
import matplotlib
matplotlib.use("agg")

import numpy as np
from numpy import sin, cos, tan, arccos, arcsin, arctan


token = '6997575305:AAF--tYpGyBzwgNXvTRDOUkhYsi8E5HU-f4'
bot = telebot.TeleBot(token)


#start and restart bot
@bot.message_handler(commands=["start", "restart"])
def start(message):
    #greeting
    bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.username}, —è –±–æ—Ç –ø–æ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—é –≥—Ä–∞—Ñ–∏–∫–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π!")
    cat = open("cute_cat.jpeg", "rb")
    bot.send_photo(message.chat.id, cat)

    #answer yes to start using
    markup = types.InlineKeyboardMarkup(row_width=1)
    yes_button = types.InlineKeyboardButton("–î–∞, –¥–∞–≤–∞–π", callback_data='yes')
    markup.add(yes_button)

    bot.send_message(message.chat.id, "–ù—É —á—Ç–æ, –Ω–∞—á–Ω–µ–º?", reply_markup=markup)


@bot.message_handler(content_types=["text"])
def bot_message(message):
    if message.chat.type == "private":
        if message.text == "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞":
            start(message)
        if message.text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏":
            help(message)
        if message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥":
            request(message)
        if message.text == "‚ñ∂Ô∏è –°–æ–∑–¥–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ —Ñ—É–Ω–∫—Ü–∏–∏":
            function(message)



@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    if callback.data == "yes":
        bot.edit_message_text("–ù—É —á—Ç–æ, –Ω–∞—á–Ω–µ–º?", callback.message.chat.id, callback.message.id)
        request(callback.message)


#print help info
@bot.message_handler()
def help(message):
    #back & restart buttons
    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    back_button = types.KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
    restart_button = types.KeyboardButton("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")
    markup.row(back_button)
    markup.row(restart_button)

    #help info
    bot.send_message(message.chat.id, "–ü—Ä–∞–≤–∏–ª–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞:", reply_markup=markup)


@bot.message_handler()
def request(message):
    bot.send_message(message.chat.id, "–•–æ—Ä–æ—à–æ")
    bot.send_message(message.chat.id, "–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å —Å–æ–∑–¥–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫")
    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    build_button = types.KeyboardButton("‚ñ∂Ô∏è –°–æ–∑–¥–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ —Ñ—É–Ω–∫—Ü–∏–∏")
    help_button = types.KeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏")
    restart_button = types.KeyboardButton("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")
    markup.row(build_button)
    markup.row(help_button)
    markup.row(restart_button)
    bot.send_message(message.chat.id, "–ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, —Ç–æ —Ç–µ–±–µ –ø–æ–º–æ–∂–µ—Ç –∫–Ω–æ–ø–∫–∞ –Ω–∏–∂–µ", reply_markup=markup)


@bot.message_handler()
def function(message):
    bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫")
    bot.register_next_step_handler(message, interval)

@bot.message_handler()
def interval(message):
    function = message.text
    bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –ª–µ–≤—É—é –≥—Ä–∞–Ω–∏—Ü—É –∏–Ω—Ç—Ä–µ–≤–∞–ª–∞")
    bot.register_next_step_handler(message, left_border, function)

@bot.message_handler()
def left_border(message, function):
    left = message.text
    function = function
    bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤—É—é –≥—Ä–∞–Ω–∏—Ü—É –∏–Ω—Ç—Ä–µ–≤–∞–ª–∞")
    bot.register_next_step_handler(message, right_border, function, left)

@bot.message_handler()
def right_border(message, function, left):
    right = message.text
    left = left
    function = function
    bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω–æ, –≤–æ—Ç –≥—Ä–∞—Ñ–∏–∫ –≤–∞—à–µ–π —Ñ—É–Ω–∫—Ü–∏–∏")

    fig, ax = plt.subplots()
    ax.set_title(f"f(x) = {function}")
    ax.set_xlabel("x")
    ax.set_ylabel("y")
    ax.set_xlim(float(left), float(right))
    ax.grid()
    x = np.linspace(float(left), float(right), 100)
    y = eval(function)
    ax.plot(x, y)
    plt.savefig("graph.png")
    image(message)


@bot.message_handler()
def image(message):
    graph = open("graph.png", "rb")
    bot.send_photo(message.chat.id, graph)

bot.infinity_polling()
